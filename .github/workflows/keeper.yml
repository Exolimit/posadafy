# 
# This wrokflow will run on every pull request to the develop branch
# 

name: Keeper workflow

## Actions that will be executed on
on:  
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  
  # 
  # chek.yml workflow
  # Run everity time in this workflow and generate an output in case the test were sucessfully
  # 
  # check:
  #   uses: ./.github/workflows/check.yml


  # # 
  # # deploy.yml
  # # Run if the pull request has the tag release and the output of the check.yml workflow is succesfully
  # # 
  # deploy:
  #   if: ((github.event.pull_request.merged == true) && (contains(github.ref, 'refs/tags/')))
  #   needs: check
  #   uses: ./.github/workflows/deploy.yml
  #   secrets: inherit

  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.0.3'
    - run: flutter pub get
    - run: flutter test
    - name: Decrypt files
      id: decrypt_files
      run: |
        echo "Decrypting files..."

        echo "${{ secrets.KEY_PROPERTIES_CONTENT }}" > android/key.properties

        echo "${{ secrets.SERVICE_ACCOUNT_GOOGLE_DEVELOPER_CONTENT }}" > android/service-account-google-developer.json

        echo "${{ secrets.UPLOAD_KEYSTORE_CONTENT }}" > android/app/upload-keystore.jks

        echo "${{ secrets.ENV_DEFAULT_CONTENT }}" > .env.default

        cd android/
        echo "Finished decrypting files"

    # Set up ruby
    - name: Set up ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7.2'

    # Gem caching
    - name: Gem caching
      id: gem_cache
      uses: actions/cache@v2
      continue-on-error: true
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    # Installing bundler to use fastlane on the machine
    - name: Setup fastlane
      id: set_up_fastlane
      run: |
        gem install bundler:2.3
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    # Gradle cache
    - name: Cache Gradle packages
      id: cache_gradle_packages
      uses: actions/cache@v2
      continue-on-error: true
      with:
        path: |
          ~/.gradle/caches/modules-*
          ~/.gradle/caches/jars-*
          ~/.gradle/caches/build-cache-*
        key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

    # Use fastlane to sign and upload the app
    - name: Sign and upload
      id: sign_and_upload
      run: bundle exec fastlane build
